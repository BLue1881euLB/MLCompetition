05聚类情况下修改排序
先取一个想办法初始化
接着连着取3三单-添加到背包
然后按照这三单去送
按照商点-o2o一个商户排一个快递员去送，能取多少就送多少--可以把距离近的商点聚类-选一个快递员去送
送货地址时间相同的记得合并

#o2o订单配送
rm(list=ls())
library(sqldf)
#全局信息
#网点与经纬度 124
w=read.table("E:/笔记学习/天池比赛/最后一公里/数据/1.csv",header = FALSE,sep=",")
w=w[-1,]
#配送点与经纬度 9214
w2=read.table("E:/笔记学习/天池比赛/最后一公里/数据/2.csv",header = FALSE,sep=",")
w2=w2[-1,]
#商户id与经纬度 598
w3=read.table("E:/笔记学习/天池比赛/最后一公里/数据/3.csv",header = FALSE,sep=",")
w3=w3[-1,]
#电商订单 9214笔
w4=read.table("E:/笔记学习/天池比赛/最后一公里/数据/4.csv",header = FALSE,sep=",")
w4=w4[-1,]
#oto订单 3273笔
w5=read.table("E:/笔记学习/天池比赛/最后一公里/数据/5.csv",header = FALSE,sep=",")
w5=w5[-1,]
#快递员列表
w6=read.table("E:/笔记学习/天池比赛/最后一公里/数据/6.csv",header = FALSE,sep=",")
w6=w6[-1,]
kdy=as.character(w6)
q1=read.table("E:/笔记学习/天池比赛/最后一公里/结果/商家最近网点距离.csv",header = FALSE,sep=",")

#函数列表
#计算距离返回路程使用时间-lat纬度long经度
dist_time<-function(longi1, lati1, longi2, lati2){
longi1=as.numeric(as.character(longi1))
lati1=as.numeric(as.character(lati1)) 
longi2=as.numeric(as.character(longi2)) 
lati2=as.numeric(as.character(lati2)) 
delta_lati = (lati1 - lati2) / 2
delta_longi = (longi1 - longi2) / 2
tmp_val = (sin(3.1415926/180*delta_lati)^2) + (cos(3.1415926/180*lati1)*cos(3.1415926/180*lati2))*(sin(3.1415926/180*delta_longi)^2)
return<-round((2*asin(tmp_val^0.5)*6378137) / (15*1000/60))
}
#计算停留时间
stay_time<-function(x){
x=as.numeric(as.character(x))
return<-round(3*x^0.5+5)
}

#转换成距8点的分钟
tomins<-function(time){
time=as.character(time)
t=as.difftime(time, format = "%H:%M", units = "mins")
t=as.numeric(t)-480
return<-t
}

#漏送的订单
o2oidlou<-{}
#对于每一个商户
for(j in 1:length(w3$V1)){
o2oidlou2<-{}
#取出该商户的所有订单
o2oid=w5[which(as.character(w3[j,]$V1)==as.character(w5$V3)),]
o2oid$V4=tomins(o2oid$V4)
o2oid$V5=tomins(o2oid$V5)
#数据框排序-时间排序
o2oid=o2oid[order(o2oid[,4]),]
#初始化一个快递员
re1=c(as.character(w6[length(w6)]))
w6=w6[-length(w6)]
#快递员的订单
c1num=0
c1oid<-{}
while((c1num+as.numeric(as.character(o2oid[1,]$V6)))<=140&length(o2oid$V1)>0&length(c1oid$V1)<11){
c1num=c1num+as.numeric(as.character(o2oid[1,]$V6))
if(length(c1oid$V1)==0){
#第一单
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else{
#判断下一单最早时间是否大于第一单的最晚时间-是-不取 不是就去取(可以再加20分钟限制)
if(o2oid[1,]$V4+20>=c1oid[1,]$V5){
break
}else{
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}
}
}
#开始去按照订单取货
for(i in 1:length(c1oid$V1)){
if(i==1){
re2=as.character(c1oid[i,]$V3)
#初始化到达时间
m=sqldf("select c1oid.*,q1.V2 as V7 from c1oid left join q1 on c1oid.V3=q1.V1")
re3=as.numeric(m$V7[1])
re4=as.numeric(as.character(c1oid$V4[1]))
re5=as.numeric(as.character(c1oid$V6[1])) 
re6=as.character(c1oid$V1[1])
#data.frame(re1,re2,re3,re4,re5,re6)
}else{
#继续取货
re2=c(re2,as.character(c1oid[i,]$V3))
d1time=re4[length(re4)]
re3=c(re3,d1time)
#离开时间
errorcount<-0
if(d1time<as.character(c1oid[i,]$V4)){
leavetime=as.numeric(as.character(c1oid[i,]$V4))
}else if(d1time>=as.numeric(as.character(c1oid$V4)) & d1time<=as.numeric(as.character(c1oid$V5))){
leavetime=re3[length(re3)]
}else{
errorcount=errorcount+1
leavetime=re3[length(re3)]
}
re4=c(re4,leavetime)
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
}
}
#送货开始
#一次送货过程
while(length(c1oid$V1)>0) {
begin=w3[which(w3$V1==re2[length(re2)]),]
if(length(begin$V1)==0){
begin=w2[which(w2$V1==re2[length(re2)]),]
}
end=w2[which(as.character(c1oid[1,]$V2)==w2$V1),]
re2=c(re2,as.character(c1oid[1,]$V2))
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#以后改进-判断如果是一个地点就时间点往前
re3=c(re3,d1time)
leavetime=re3[length(re3)]+stay_time(c1oid[1,]$V6)
re4=c(re4,leavetime)
tmp5=as.numeric(paste("-",c1oid[1,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[1,]$V1))
c1oid=c1oid[-1,]
}
#循环回去判断是否要继续送货
while(length(o2oid$V1)>0){
#回网点继续送
begin=w2[which(w2$V1==re2[length(re2)]),]
end=w3[which(w3$V1==as.character(o2oid$V3[1])),]
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#快递员的订单
c1num=0
c1oid<-{}
while((c1num+as.numeric(as.character(o2oid[1,]$V6)))<=140&length(o2oid$V1)>0&length(c1oid$V1)<11){
c1num=c1num+as.numeric(as.character(o2oid[1,]$V6))
if(length(c1oid$V1)==0){
#第一单
if(o2oid[1,]$V4<=d1time & o2oid[1,]$V5>=d1time){
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else if(o2oid[1,]$V4>=d1time){
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else{
#这里有漏洞 万一赶不回来怎么办(后面补订单)
o2oidlou2=rbind(o2oidlou2,o2oid[1,])
o2oidlou=rbind(o2oidlou,o2oid[1,])
o2oid=o2oid[-1,]
break
}
}else{
#判断下一单最早时间是否大于第一单的最晚时间-是-不取 不是就去取(加上20分钟限制)
if(o2oid[1,]$V4+20>=c1oid[1,]$V5){
break
}else{
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}
}
}
##开始去按照订单取货
if(length(c1oid$V1)>0){
for(i in 1:length(c1oid$V1)){
if(i==1){
re2=c(re2,as.character(c1oid[i,]$V3))
#初始化到达时间
re3=c(re3,d1time)
if(c1oid[i,]$V4>re3[length(re3)]){
re4=c(re4,c1oid[i,]$V4)
}else{
re4=c(re4,re3[length(re3)])
}
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
#data.frame(re1,re2,re3,re4,re5,re6)
}else{
#继续取货
re2=c(re2,as.character(c1oid[i,]$V3))
d1time=re4[length(re4)]
re3=c(re3,d1time)
#离开时间
errorcount<-0
if(d1time<as.character(c1oid[i,]$V4)){
leavetime=as.numeric(as.character(c1oid[i,]$V4))
}else if(d1time>=as.numeric(as.character(c1oid$V4)) & d1time<=as.numeric(as.character(c1oid$V5))){
leavetime=re3[length(re3)]
}else{
errorcount=errorcount+1
leavetime=re3[length(re3)]
}
re4=c(re4,leavetime)
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
}
}
}
#送货开始
#一次送货过程
while(length(c1oid$V1)>0) {
begin=w3[which(w3$V1==re2[length(re2)]),]
if(length(begin$V1)==0){
begin=w2[which(w2$V1==re2[length(re2)]),]
}
end=w2[which(as.character(c1oid[1,]$V2)==w2$V1),]
re2=c(re2,as.character(c1oid[1,]$V2))
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#以后改进-判断如果是一个地点就时间点往前
re3=c(re3,d1time)
leavetime=re3[length(re3)]+stay_time(c1oid[1,]$V6)
re4=c(re4,leavetime)
tmp5=as.numeric(paste("-",c1oid[1,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[1,]$V1))
c1oid=c1oid[-1,]
}
}
re=data.frame(re1,re2,re3,re4,re5,re6)
write.table (re, file ="E:/笔记学习/天池比赛/最后一公里/结果/o2o单商家.csv",sep =",",row.names = F,col.names=F,quote =F,append = TRUE)

#处理漏送的订单S015
while(length(o2oidlou2$V1)>0){
o2oid=o2oidlou2
o2oidlou2<-{}
#初始化一个快递员
re1=c(as.character(w6[length(w6)]))
w6=w6[-length(w6)]
#快递员的订单
c1num=0
c1oid<-{}
while((c1num+as.numeric(as.character(o2oid[1,]$V6)))<=140&length(o2oid$V1)>0&length(c1oid$V1)<11){
c1num=c1num+as.numeric(as.character(o2oid[1,]$V6))
if(length(c1oid$V1)==0){
#第一单
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else{
#判断下一单最早时间是否大于第一单的最晚时间-是-不取 不是就去取(可以再加20分钟限制)
if(o2oid[1,]$V4+20>=c1oid[1,]$V5){
break
}else{
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}
}
}
#开始去按照订单取货
for(i in 1:length(c1oid$V1)){
if(i==1){
re2=as.character(c1oid[i,]$V3)
#初始化到达时间
m=sqldf("select c1oid.*,q1.V2 as V7 from c1oid left join q1 on c1oid.V3=q1.V1")
re3=as.numeric(m$V7[1])
re4=as.numeric(as.character(c1oid$V4[1]))
re5=as.numeric(as.character(c1oid$V6[1])) 
re6=as.character(c1oid$V1[1])
#data.frame(re1,re2,re3,re4,re5,re6)
}else{
#继续取货
re2=c(re2,as.character(c1oid[i,]$V3))
d1time=re4[length(re4)]
re3=c(re3,d1time)
#离开时间
errorcount<-0
if(d1time<as.character(c1oid[i,]$V4)){
leavetime=as.numeric(as.character(c1oid[i,]$V4))
}else if(d1time>=as.numeric(as.character(c1oid$V4)) & d1time<=as.numeric(as.character(c1oid$V5))){
leavetime=re3[length(re3)]
}else{
errorcount=errorcount+1
leavetime=re3[length(re3)]
}
re4=c(re4,leavetime)
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
}
}
#送货开始
#一次送货过程
while(length(c1oid$V1)>0) {
begin=w3[which(w3$V1==re2[length(re2)]),]
if(length(begin$V1)==0){
begin=w2[which(w2$V1==re2[length(re2)]),]
}
end=w2[which(as.character(c1oid[1,]$V2)==w2$V1),]
re2=c(re2,as.character(c1oid[1,]$V2))
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#以后改进-判断如果是一个地点就时间点往前
re3=c(re3,d1time)
leavetime=re3[length(re3)]+stay_time(c1oid[1,]$V6)
re4=c(re4,leavetime)
tmp5=as.numeric(paste("-",c1oid[1,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[1,]$V1))
c1oid=c1oid[-1,]
}
#循环回去判断是否要继续送货
while(length(o2oid$V1)>0){
#回网点继续送
begin=w2[which(w2$V1==re2[length(re2)]),]
end=w3[which(w3$V1==as.character(o2oid$V3[1])),]
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#快递员的订单
c1num=0
c1oid<-{}
while((c1num+as.numeric(as.character(o2oid[1,]$V6)))<=140&length(o2oid$V1)>0&length(c1oid$V1)<11){
c1num=c1num+as.numeric(as.character(o2oid[1,]$V6))
if(length(c1oid$V1)==0){
#第一单
if(o2oid[1,]$V4<=d1time & o2oid[1,]$V5>=d1time){
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else if(o2oid[1,]$V4>=d1time){
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}else{
#这里有漏洞 万一赶不回来怎么办(后面补订单)
o2oidlou2=rbind(o2oidlou2,o2oid[1,])
o2oid=o2oid[-1,]
break
}
}else{
#判断下一单最早时间是否大于第一单的最晚时间-是-不取 不是就去取(加上20分钟限制)
if(o2oid[1,]$V4+20>=c1oid[1,]$V5){
break
}else{
c1oid<-rbind(c1oid,o2oid[1,])
o2oid=o2oid[-1,]
}
}
}
##开始去按照订单取货
if(length(c1oid$V1)>0){
for(i in 1:length(c1oid$V1)){
if(i==1){
re2=c(re2,as.character(c1oid[i,]$V3))
#初始化到达时间
re3=c(re3,d1time)
if(c1oid[i,]$V4>re3[length(re3)]){
re4=c(re4,c1oid[i,]$V4)
}else{
re4=c(re4,re3[length(re3)])
}
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
#data.frame(re1,re2,re3,re4,re5,re6)
}else{
#继续取货
re2=c(re2,as.character(c1oid[i,]$V3))
d1time=re4[length(re4)]
re3=c(re3,d1time)
#离开时间
errorcount<-0
if(d1time<as.character(c1oid[i,]$V4)){
leavetime=as.numeric(as.character(c1oid[i,]$V4))
}else if(d1time>=as.numeric(as.character(c1oid$V4)) & d1time<=as.numeric(as.character(c1oid$V5))){
leavetime=re3[length(re3)]
}else{
errorcount=errorcount+1
leavetime=re3[length(re3)]
}
re4=c(re4,leavetime)
tmp5=as.numeric(paste("",c1oid[i,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[i,]$V1))
}
}
}
#送货开始
#一次送货过程
while(length(c1oid$V1)>0) {
begin=w3[which(w3$V1==re2[length(re2)]),]
if(length(begin$V1)==0){
begin=w2[which(w2$V1==re2[length(re2)]),]
}
end=w2[which(as.character(c1oid[1,]$V2)==w2$V1),]
re2=c(re2,as.character(c1oid[1,]$V2))
d1time=re4[length(re4)]+dist_time(begin$V2,begin$V3,end$V2,end$V3)
#以后改进-判断如果是一个地点就时间点往前
re3=c(re3,d1time)
leavetime=re3[length(re3)]+stay_time(c1oid[1,]$V6)
re4=c(re4,leavetime)
tmp5=as.numeric(paste("-",c1oid[1,]$V6,sep=""))
re5=c(re5,tmp5)
re6=c(re6,as.character(c1oid[1,]$V1))
c1oid=c1oid[-1,]
}
}
re=data.frame(re1,re2,re3,re4,re5,re6)
write.table (re, file ="E:/笔记学习/天池比赛/最后一公里/结果/o2o单商家.csv",sep =",",row.names = F,col.names=F,quote =F,append = TRUE)

}

}


