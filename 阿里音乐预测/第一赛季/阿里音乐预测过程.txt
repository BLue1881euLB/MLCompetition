R时间序列预测
#w=read.csv("onlyone.csv",header = FALSE)
rm(list=ls())
w=read.csv("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv",header = FALSE)
a=w$V4
b=c(1:length(a))
pdate=10;  ##预测的天数
d2=a[1:(length(a)-pdate)]
d3=a[(length(a)-pdate+1):length(a)]
m1=arima(d2,order=c(1,1,1))
pre=c(predict(m1,pdate)$pred)
data.frame(d3,pre,(pre-d3))
plot(c(1:pdate),d3,type='b',pch=0,col='red')
lines(c(1:pdate),pre,type='b',pch=2,col='blue')

R批量预测脚本
for (i in 1:50){
data<-paste("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/",i,".csv",sep="")  #print(data)
w<-read.csv(data,header = FALSE)
a=w$V4
b=c(1:length(a))
pdate=10;  ##预测的天数
d2=x$a[1:(length(a)-pdate)]
d3=x$a[(length(a)-pdate+1):length(a)]
m1=arima(d2,order=c(1,1,1))
pre=c(predict(m1,pdate)$pred)
pre=ceiling(pre)  ##向上取整
data2<-paste("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/预测结果/",i,".csv",sep="")
aid=w$V1[1:pdate]
#d=seq(as.Date("2013/12/14"),as.Date("2014/8/5"), by="day")
time=w$V3[(length(a)-pdate+1):length(a)]
cha=abs((pre-d3))
rate=round(cha/d3,4)#小数后保留4位
sc=data.frame(aid,time,pre,d3,cha,rate)
write.csv (sc, file =data2,row.names = F,quote =F)
}

划分训练集合train j1，验证集cv j2，测试集test j3，
rm(list=ls())
w=read.csv("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv",header = FALSE)
a=w$V4
b=c(1:length(a))
j1=a[1:floor(0.6*length(a))]
j2=a[(floor(0.6*length(a))+1):(floor(0.6*length(a))+floor(0.2*length(a)))]
j3=a[(floor(0.6*length(a))+floor(0.2*length(a))):length(a)]
m1=arima(j1,order=c(1,1,1))
pre1=c(predict(m1,length(j2))$pred)
jcv=0.5*sum((pre1-j2)^2)

matlab预测
onlyone=load('F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv')
b=onlyone(:,4)
a=onlyone(:,3)
d=[a b]
save all 'd'

load all 'd'
d=d'
[d2,ps]= mapminmax(d,0,1)  %归一化
P=d2(1,:)
T=d2(2,:)
figure(1)
pdate=60;
p1=P(1:length(P)-pdate);
p2=T(1:length(P)-pdate);
net = newgrnn(p1,p2,.1);  %传播速度为0.1  广义回归神经网络GRNN 
x=P(length(P)-pdate+1:length(P));
y=sim(net,x)
plot(x,y,'^m-');   %预测值
yy=T(length(P)-pdate+1:length(P));
hold on ;  
plot(x,yy,'-o');    %真实值
legend('预测值','真实值')
yreal = mapminmax('reverse',yy,ps);
ypre = mapminmax('reverse',y,ps);
yreal(2,:);
ypre(2,:);
prate=abs(yreal(2,:)-ypre(2,:))./yreal(2,:)
figure(2)        %预测比例准确性线
x1=min(x):.001:1
plot(x1,0.3,'r-');%按照0.3划了一条线
hold on ;
plot(x,prate,'o-');
legend('0.3标准线','预测准确率')

BP神经网络，划分训练集合train j1，验证集cv j2，测试集test j3，
clear;clc;
onlyone=load('F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv');
bb=onlyone(:,4);
b11=ceil(0.6*length(bb)):length(bb);
jtrain=[];
jcv=[];
net1 = feedforwardnet(10);
for i = 1:length(b11)
a=1:(b11(i));
a=a';
b=bb(1:b11(i));
d=[a  b];
d=d';
P=d(1,:);
T=d(2,:);
j1=b(1:ceil(0.6*length(a)))';
j2=b((ceil(0.6*length(a))+1):(ceil(0.6*length(a))+ceil(0.2*length(a))))';
j3=b((ceil(0.6*length(a))+ceil(0.2*length(a))+1):length(a))';
net = train(net1,P(1:length(j1)),j1);	
p1 = sim(net,P(1:length(j1)));
p2=sim(net,P(length(j1)+1:length(j1)+length(j2)));
jtrain(i)=0.5*sum((p1-j1).^2);
jcv(i)=0.5*sum((p2-j2).^2);
end 
xx=1:length(jtrain);
plot(xx,jtrain,'o-');
hold on;
plot(xx,jcv,'*-k');
legend('Jtrain测试集','Jcv验证集')

figure(1)
plot(P(1:length(j1)),j1,'o-');					% 绘图
hold on;
plot(P(1:length(j1)),p1,'*-k');
legend('原始数据','feedforwardnet结果BP神经网络')

clear;clc;
onlyone=load('F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv');
bb=onlyone(:,4);
a=1:(length(bb));
a=a';
b=bb;
d=[a  b];
d=d';
P=d(1,:);
T=d(2,:);
j1=b(1:ceil(0.6*length(a)))';
j2=b((ceil(0.6*length(a))+1):(ceil(0.6*length(a))+ceil(0.2*length(a))))';
j3=b((ceil(0.6*length(a))+ceil(0.2*length(a))+1):length(a))';
net = newgrnn(P(1:length(j1)),j1,.1); 
p1 = sim(net,P(1:length(j1)));
p2=sim(net,P(length(j1)+1:length(j1)+length(j2)));
figure(1)
plot(P(1:length(j1)),j1,'o-r');					% 绘图
hold on;
plot(P(1:length(j1)),p1,'*-k');
legend('原始数据','feedforwardnet结果BP神经网络')
figure(2)
plot(P(length(j1)+1:length(j1)+length(j2)),j2,'o-r');					% 绘图
hold on;
plot(P(length(j1)+1:length(j1)+length(j2)),p2,'*-k');
legend('原始数据','newgrnn结果BP神经网络')

R累加和预测
rm(list=ls())
w=read.csv("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv",header = FALSE)
a=w$V4
t=array();
t[1]=a[1]
for(i in 2:length(a)){
t[i]=t[i-1]+a[i]
}
x=c(1:length(a))
plot(x,t,'b')
m=lm(t~1+x)
summary(m)
plot(x,t)
lines(x,fitted(m),type='b',col='red') #模型拟合
plot(m,which=1)  #画残差图
plot(x,m$residuals)  #画残差图
shapiro.test(m$residuals)  #正态检验残差  假设是正态分布
qqnorm(m$residuals)  #画qq图
qqline(m$residuals)
#提取残差模型

#预测
rm(list=ls())
w=read.csv("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/4.csv",header = FALSE)
a=w$V4
b=c(1:length(a))
pdate=10;  ##预测的天数
d2=a[1:(length(a)-pdate)]
d3=a[(length(a)-pdate+1):length(a)]
t=array();
t[1]=d2[1]
for(i in 2:length(d2)){
t[i]=t[i-1]+d2[i]
}
x=c(1:length(d2))
m=lm(t~1+x)
plot(x,t)
lines(x,fitted(m),type='b',col='red') #模型拟合
pre=predict(m,data.frame(x=c((length(d2)+1):length(a)),interval='prediction'))
#fit=pre[,'fit'] #预测累积和值
fit=as.array(floor(pre)) #预测累积和值
p1=array();
p1[1]=fit[1]-t[length(t)]
for(i in 2:length(fit)){
p1[i]=fit[i]-fit[i-1]
}
round(abs(p1-d3)/d3,2)  #精确到小数点后几位

stl分解
library("quantmod")
getSymbols('^IXIC',src='yahoo',from='2008-1-1',to='2015-10-1')
sdata.month=to.monthly(IXIC)
sdata.close=sdata.month$IXIC.Close
head(sdata.close)
sdata=ts(as.double(sdata.close),frequency=12,start=c(2008,1))
#as.double(sdata.close)为避免出现‘只允许单变量序列’的报错
fit=stl(sdata,t.window=13,s.window='periodic',robust=T)
#时间序列的STL分解是以鲁棒局部加权回归作为平滑方法的时间序列分解方法
#故应使robust=T，s.window='periodic'指使用均值平滑季节性子序列
plot(fit)
stl例子s.window是季节性
plot(stllc <- stl(log(co2), s.window = 21))
library("forecast")
forecast(stl(log(co2), s.window = 21))  #模型拟合
plot( forecast(stl(log(co2), s.window = 21))) #画出预测模型


时间序列分析也有很多算法，像ARMA/ARIMA这类算法，是没法直接用特征的。GBDT回归/RF是可以用特征的
求指导一下怎么提取周期性分量，我看到有明显的7天周期，但是不确定是否还有其他周期性
s = ts(x,frequnce = 7)
y = stl(s,s.window=sw) 
sw相当于小波变换的窗，可以是数值也可以是“period"
马上就可以看到分解结果，你试试不同的sw就明白他的作用了
如果有明显的周期性，那么不做这一步肯定会失很多分


R批量预测脚本
for (i in 1:50){
data<-paste("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/",i,".csv",sep="")  #print(data)
w<-read.csv(data,header = FALSE)
a=w$V4
b=c(1:length(a))
pdate=10;  ##预测的天数
d2=x$a[1:(length(a)-pdate)]
d3=x$a[(length(a)-pdate+1):length(a)]
m1=arima(d2,order=c(1,1,1))
pre=c(predict(m1,pdate)$pred)
pre=ceiling(pre)  ##向上取整
data2<-paste("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/预测结果/",i,".csv",sep="")
aid=w$V1[1:pdate]
#d=seq(as.Date("2013/12/14"),as.Date("2014/8/5"), by="day")
time=w$V3[(length(a)-pdate+1):length(a)]
cha=abs((pre-d3))
rate=round(cha/d3,4)#小数后保留4位
sc=data.frame(aid,time,pre,d3,cha,rate)
write.csv (sc, file =data2,row.names = F,quote =F)
}

rm(list=ls())
library("stringr")
library("forecast")
d=seq(as.Date("2015/09/01"),as.Date("2015/10/30"), by="day")  #生成时间序列
d=as.numeric(str_replace(str_replace(d,"-",""),"-",""))  #替换替换匹配的部分library("stringr")
for (i in 1:50){
data<-paste("F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/处理后的csv文件/",i,".csv",sep="")  #print(data)
w<-read.csv(data,header = FALSE)
a=w$V4
#a=w$V4[floor(0.5*length(w$V4)):length(w$V4)]
#增加周期性-以7天为一个周期
a=ts(a,frequency = 7)
p=floor(forecast(auto.arima(a),60)$mean)
aid=c(1:60)
sc=data.frame(aid,p,d)
sc$aid=w[1,]$V1
write.table (sc, file ="F:/笔记学习/天池比赛/阿里音乐流行趋势预测大赛/res112.csv",sep =",",row.names = F,col.names=F,quote =F,append = TRUE)
}
